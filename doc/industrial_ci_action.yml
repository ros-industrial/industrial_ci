# This config uses industrial_ci (https://github.com/ros-industrial/industrial_ci.git).
# For troubleshooting, see readme (https://github.com/ros-industrial/industrial_ci/blob/master/README.rst)

name: CI

# This determines when this workflow is run
on: [push, pull_request] # on all pushes and PRs

# or more fine-grained
# on:
#   # When master or melodic-devel branch is pushed to
#   push:
#     branches: [ master, melodic-devel ]
#   # When there is a pull request against master
#   pull_request:
#     branches: [ master ]

jobs:
  industrial_ci:
    strategy:
      matrix: # matrix is the product of entries
        ROS_DISTRO: [melodic]
        ROS_REPO: [testing, main]
        # exclude: # specific configuration can be excludes
        #   - {ROS_DISTRO: melodic, ROS_REPO: testing}
        include: # add additional configurations
          - {ROS_DISTRO: kinetic, ROS_REPO: testing}
    env:
      CCACHE_DIR: /github/home/.ccache # Directory for ccache (and how we enable ccache in industrial_ci)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # clone target repository
      - uses: actions/cache@v2 # fetch/store the directory used by ccache before/after the ci run
        with:
          path: ${{ env.CCACHE_DIR }}
          # we always want the ccache cache to be persisted, as we cannot easily
          # determine whether dependencies have changed, and ccache will manage
          # updating the cache for us. Adding 'run_id' to the key will force an
          # upload at the end of the job.
          key: ccache-${{ matrix.ros_distro }}-${{ matrix.ros_repo }}-${{github.run_id}}
          restore-keys: |
            ccache-${{ matrix.ros_distro }}-${{ matrix.ros_repo }}-
      - uses: 'ros-industrial/industrial_ci@master' # run industrial_ci
        env: # either pass all entries explicitly
          ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
          ROS_REPO: ${{ matrix.ROS_REPO }}
        # with: # or pass the full matrix as config
        #    config: ${{toJSON(matrix)}}
